includes:
	- tests/phpstan/analyse-for-current-php-version.neon.php
	- tests/phpstan/configs/actual-problems.neon
	- tests/phpstan/configs/impossible-generics.neon
	- tests/phpstan/configs/php-bugs.neon
	- tests/phpstan/configs/phpstan-bugs.neon
	- tests/phpstan/configs/spl-fixed-array-sucks.neon
	- vendor/phpstan/phpstan-phpunit/extension.neon
	- vendor/phpstan/phpstan-phpunit/rules.neon
	- vendor/phpstan/phpstan-strict-rules/rules.neon

rules:
	- xpocketmc\phpstan\rules\DeprecatedLegacyEnumAccessRule
	- xpocketmc\phpstan\rules\DisallowEnumComparisonRule
	- xpocketmc\phpstan\rules\DisallowForeachByReferenceRule
	- xpocketmc\phpstan\rules\UnsafeForeachArrayOfStringRule
#	- xpocketmc\phpstan\rules\ThreadedSupportedTypesRule

parameters:
	level: 9
	checkMissingCallableSignature: true
	treatPhpDocTypesAsCertain: false
	bootstrapFiles:
		- tests/phpstan/bootstrap.php
	scanDirectories:
		- build
		- tests/plugins/TesterPlugin
		- tools
	scanFiles:
		- src/XPocketMC.php
	paths:
		- build
		- src
		- tests/phpstan/rules
		- tests/phpunit
		- tests/plugins/TesterPlugin
		- tools
	excludePaths:
		analyseAndScan:
			- build/php
	dynamicConstantNames:
		- xpocketmc\VersionInfo::IS_DEVELOPMENT_BUILD
		- xpocketmc\DEBUG
		- xpocketmc\IS_DEVELOPMENT_BUILD
	stubFiles:
		- tests/phpstan/stubs/JsonMapper.stub
		- tests/phpstan/stubs/leveldb.stub
		- tests/phpstan/stubs/pmmpthread.stub
	reportUnmatchedIgnoredErrors: false #no other way to silence platform-specific non-warnings
	staticReflectionClassNamePatterns:
		- "#^COM$#"
	typeAliases:
		#variadics don't work for this - mixed probably shouldn't work either, but for now it does
		#what we actually need is something that accepts an infinite number of parameters, but in the absence of that,
		#we'll just fill it with 10 - it's very unlikely to encounter a callable with 10 parameters anyway.
		anyCallable: 'callable(never, never, never, never, never, never, never, never, never, never) : mixed'
		anyClosure: '\Closure(never, never, never, never, never, never, never, never, never, never) : mixed'
